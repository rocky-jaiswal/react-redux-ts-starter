version: 2

workflows:
  version: 2
  test_build_and_deploy:
    jobs:
      - test
      - build:
          requires:
            - test
      - deploy:
          requires:
            - build

jobs:
  test:
    docker:
      - image: circleci/node:14
    steps:
      - checkout
      - restore_cache:
          key: v1-deps-{{ checksum "package.json" }}
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-deps-{{ checksum "package.json" }}
      - run: yarn lint
      - run: yarn test
  build:
    docker:
      - image: circleci/node:14
    steps:
      - checkout
      - restore_cache:
          key: v1-deps-{{ checksum "package.json" }}
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-deps-{{ checksum "package.json" }}
      - run: yarn build
      - persist_to_workspace:
          root: ~/project
          paths:
            - build
  deploy:
    docker:
      - image: circleci/python:3.9.4
    steps:
      - run: git clone https://github.com/rocky-jaiswal/static-site-cdk.git
      - run: sudo apt-get update && sudo apt-get install nodejs npm
      - run: sudo npm install -g aws-cdk
      - run: cd static-site-cdk && rm -rf site-contents/
      - run: mkdir -p static-site-cdk/site-contents
      - attach_workspace:
          at: ./build
      - run: cp -R ./build/build/* ./static-site-cdk/site-contents/
      - run: mkdir -p ~/.aws
      - run: touch ~/.aws/config
      - run: touch ~/.aws/credentials
      - run: echo "[default]" > ~/.aws/config
      - run: echo "region = eu-central-1" >> ~/.aws/config
      - run: echo "[default]" > ~/.aws/credentials
      - run: echo "aws_access_key_id = ${AWS_KEY}" >> ~/.aws/credentials
      - run: echo "aws_secret_access_key = ${AWS_SECRET}" >> ~/.aws/credentials
      - run: mkdir downloads && cd downloads && curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" && unzip awscliv2.zip
      - run: cd downloads && sudo ./aws/install
      - run: pip install --user poetry
      - run: cd static-site-cdk && poetry install
      - run: cd ~/project/static-site-cdk && source`poetry env info --path`/bin/activate && cdk synth
      - run: rm -rf ~/.aws/credentials
